//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfClientTempConvertion.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CelsiustoFahrenheit", ReplyAction="http://tempuri.org/IService1/CelsiustoFahrenheitResponse")]
        double CelsiustoFahrenheit(double CTemp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CelsiustoFahrenheit", ReplyAction="http://tempuri.org/IService1/CelsiustoFahrenheitResponse")]
        System.Threading.Tasks.Task<double> CelsiustoFahrenheitAsync(double CTemp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CelsiustoKelvin", ReplyAction="http://tempuri.org/IService1/CelsiustoKelvinResponse")]
        double CelsiustoKelvin(double CTemp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CelsiustoKelvin", ReplyAction="http://tempuri.org/IService1/CelsiustoKelvinResponse")]
        System.Threading.Tasks.Task<double> CelsiustoKelvinAsync(double CTemp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FahrenheittoCelsius", ReplyAction="http://tempuri.org/IService1/FahrenheittoCelsiusResponse")]
        double FahrenheittoCelsius(double FTemp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FahrenheittoCelsius", ReplyAction="http://tempuri.org/IService1/FahrenheittoCelsiusResponse")]
        System.Threading.Tasks.Task<double> FahrenheittoCelsiusAsync(double FTemp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FahrenheittoKelvin", ReplyAction="http://tempuri.org/IService1/FahrenheittoKelvinResponse")]
        double FahrenheittoKelvin(double FTemp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FahrenheittoKelvin", ReplyAction="http://tempuri.org/IService1/FahrenheittoKelvinResponse")]
        System.Threading.Tasks.Task<double> FahrenheittoKelvinAsync(double FTemp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KelvintoCelsius", ReplyAction="http://tempuri.org/IService1/KelvintoCelsiusResponse")]
        double KelvintoCelsius(double KTemp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KelvintoCelsius", ReplyAction="http://tempuri.org/IService1/KelvintoCelsiusResponse")]
        System.Threading.Tasks.Task<double> KelvintoCelsiusAsync(double KTemp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KelvintoFahrenheit", ReplyAction="http://tempuri.org/IService1/KelvintoFahrenheitResponse")]
        double KelvintoFahrenheit(double KTemp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KelvintoFahrenheit", ReplyAction="http://tempuri.org/IService1/KelvintoFahrenheitResponse")]
        System.Threading.Tasks.Task<double> KelvintoFahrenheitAsync(double KTemp);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WcfClientTempConvertion.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WcfClientTempConvertion.ServiceReference1.IService1>, WcfClientTempConvertion.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double CelsiustoFahrenheit(double CTemp) {
            return base.Channel.CelsiustoFahrenheit(CTemp);
        }
        
        public System.Threading.Tasks.Task<double> CelsiustoFahrenheitAsync(double CTemp) {
            return base.Channel.CelsiustoFahrenheitAsync(CTemp);
        }
        
        public double CelsiustoKelvin(double CTemp) {
            return base.Channel.CelsiustoKelvin(CTemp);
        }
        
        public System.Threading.Tasks.Task<double> CelsiustoKelvinAsync(double CTemp) {
            return base.Channel.CelsiustoKelvinAsync(CTemp);
        }
        
        public double FahrenheittoCelsius(double FTemp) {
            return base.Channel.FahrenheittoCelsius(FTemp);
        }
        
        public System.Threading.Tasks.Task<double> FahrenheittoCelsiusAsync(double FTemp) {
            return base.Channel.FahrenheittoCelsiusAsync(FTemp);
        }
        
        public double FahrenheittoKelvin(double FTemp) {
            return base.Channel.FahrenheittoKelvin(FTemp);
        }
        
        public System.Threading.Tasks.Task<double> FahrenheittoKelvinAsync(double FTemp) {
            return base.Channel.FahrenheittoKelvinAsync(FTemp);
        }
        
        public double KelvintoCelsius(double KTemp) {
            return base.Channel.KelvintoCelsius(KTemp);
        }
        
        public System.Threading.Tasks.Task<double> KelvintoCelsiusAsync(double KTemp) {
            return base.Channel.KelvintoCelsiusAsync(KTemp);
        }
        
        public double KelvintoFahrenheit(double KTemp) {
            return base.Channel.KelvintoFahrenheit(KTemp);
        }
        
        public System.Threading.Tasks.Task<double> KelvintoFahrenheitAsync(double KTemp) {
            return base.Channel.KelvintoFahrenheitAsync(KTemp);
        }
    }
}
